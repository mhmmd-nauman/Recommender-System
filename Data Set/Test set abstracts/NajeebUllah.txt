   Selecting Reliability Model Predict Residual Defects Open Source Software.   proposed method evaluates popular software reliability growth models selects predict software's remaining faults, providing practical support project managers considering open source component.  method predicting open source software residual defects.   Nowadays commercial projects open source applications components (OSS). recurring problem selection OSS project. relevant criterion selection reliability OSS. paper, propose method selects software reliability growth model (SRGM), alternative models predicts reliability OSS, terms residual defects. methods exist predicting residual defects software, widely method SRGM. SRGM underlying assumptions, violated practice, empirical evidence shown models robust despite assumption violations. However, SRGM family, models available, difficult models apply context. present empirical method applies SRGMs iteratively OSS defect data selects model predicts residual defects OSS. empirically validate method applying defect data collected 21 releases OSS projects. results show method helps selecting model alternative models. method selects model 17 times 21. remaining 4, selects model. empirical analysis open source software defects data software reliability growth models.  purpose study analyze reliability growth Open Source Software (OSS) Software Reliability Growth Models (SRGM). study defects data twenty releases OSS projects. release selected projects types datasets created; datasets developed respect defect creation date (created date DS) datasets developed respect defect updated date (updated date DS). defects datasets modelled SRGMs; Musa Okumoto, Inflection S-Shaped, Goel Okumoto, Delayed S-Shaped, Logistic, Gompertz, Yamada Exponential, Generalized Goel Model. models chosen due widespread literature. SRGMs fitted types defects datasets project fitting prediction capabilities analysed order study OSS reliability growth respect defects creation defects updating defect analysis constructive reliability predictor. Results show SRGMs fitting capabilities prediction qualities directly increase defects creation date developing OSS defect datasets characterize reliability growth OSS. OSS reliability growth characterized SRGM defect creation date defects updating (fixing) date developing OSS defects datasets reliability modelling. Empirical Study Reliability Growth Open versus Closed Source Software Software Reliability Growth Models.  purpose study analyze reliability growth Open Source Software (OSS) versus software developed in-house (i.e. Closed Source Software, CSS) Software Reliability Growth Model. study 22 datasets failure data CSS 18 datasets defect data OSS projects. failure data modelled SRGM (Musa Okumoto, Inflection S-Shaped, Goel Okumoto, Delayed S-Shaped, Logistic, Gompertz, Yamada Exponential, Generalized Goel Model). models chosen due widespread use. results summarized follows selected SRGM fit defect data OSS projects manner CSS. OSS reliability grows similarly CSS. Musa Okumoto Inflection S-Shaped perform CSS, OSS Inflection S-Shaped Gompertz performers. SRGM reliability characterization OSS projects. Comparative Analysis Software Reliability Growth Models Defects Data Closed Open Source Software purpose study compare fitting (goodness fit) prediction capability Software Reliability Growth Models (SRGM) fifty failure Datasets. data sets defect data collected system test phase, operational phase (field defects) Open Source Software (OSS) projects. failure data modelled SRGM (Musa Okumoto, Inflection S-Shaped, Goel Okumoto, Delayed S-Shaped, Logistic, Gompertz, Yamada Exponential, Generalized Goel Model). models chosen due prevalence software reliability models. results summarized follows Fitting capability: Musa Okumoto fits data sets, models fit OSS datasets. Prediction capability: Musa Okumoto, Inflection S-Shaped Goel Okumoto predictors industrial data sets, Gompertz Yamada predictors OSS data sets. Fitting prediction capability: Musa Okumoto Inflection performers industrial datasets. happens slightly 50% datasets. Gompertz Inflection performers OSS datasets. 